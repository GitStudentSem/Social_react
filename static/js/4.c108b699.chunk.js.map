{"version":3,"sources":["components/common/FormsControls/FormsControls.module.css","utils/validators/validators.js","components/common/FormsControls/FormsControls.jsx","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","required","value","maxLengthCreator","maxLength","length","FormControl","input","meta","touched","error","children","hasError","className","s","formControl","Input","props","restProps","child","createField","placeholder","name","validators","component","text","validate","DialogItem","path","id","user","to","activeClassName","active","src","avatar","alt","Message","message","message_user","message_text","maxLength50","reduxForm","form","onSubmit","handleSubmit","input_wrapper","Field","send","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","newMessageBody","isAuth","dialogs_wrapper","users","line","dialog_window","message_wrapper","values","sendMessage","compose","connect","withAuthRedirect"],"mappings":"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","file":"static/js/4.c108b699.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__xrhZx\",\"error\":\"FormsControls_error__UoLKa\",\"formSummaryError\":\"FormsControls_formSummaryError__1XbeL\"};","export const required = (value) => {\r\n  if (value) {\r\n    return undefined;\r\n  }\r\n  return \"Field is required\";\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  if (value.length > maxLength) {\r\n    return `Max length is ${maxLength} symbols`;\r\n  }\r\n  return undefined;\r\n};\r\n","import React from \"react\";\r\nimport { Field } from \"redux-form\";\r\nimport s from \"./FormsControls.module.css\";\r\n\r\nconst FormControl = ({ input, meta: { touched, error }, children }) => {\r\n  const hasError = touched && error;\r\n\r\n  return (\r\n    <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\r\n      <div>{children}</div>\r\n      {hasError && <span>{error}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Input = (props) => {\r\n  const { input, meta, child, ...restProps } = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      <input {...input} {...restProps} />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport const createField = (\r\n  placeholder,\r\n  name,\r\n  validators,\r\n  component,\r\n  props = {},\r\n  text = \"\"\r\n) => {\r\n  return (\r\n    <div>\r\n      <Field\r\n        placeholder={placeholder}\r\n        name={name}\r\n        validate={validators}\r\n        component={component}\r\n        {...props}\r\n      />{\" \"}\r\n      {text}\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs_wrapper\":\"Dialogs_dialogs_wrapper__ncx17\",\"dialog_window\":\"Dialogs_dialog_window__2rAp-\",\"line\":\"Dialogs_line__2YEgV\",\"message_wrapper\":\"Dialogs_message_wrapper__pvBaW\",\"input_wrapper\":\"Dialogs_input_wrapper__2145a\",\"input\":\"Dialogs_input__1bHr9\",\"send\":\"Dialogs_send__3JAlH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"DialogItem_user__3FGRZ\",\"avatar\":\"DialogItem_avatar__2mSWo\",\"name\":\"DialogItem_name__1l2n0\",\"active\":\"DialogItem_active__1iit0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2f9ph\",\"message_user\":\"Message_message_user__Zx1Vp\",\"avatar\":\"Message_avatar__JlnAj\",\"name\":\"Message_name__LmD49\",\"message_text\":\"Message_message_text__7sVX_\"};","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from \"./DialogItem.module.css\";\r\nimport avatar from \"./../../../assets/images/user.svg\";\r\n\r\nconst DialogItem = (props) => {\r\n  let path = `/dialogs/${props.id}`;\r\n\r\n  return (\r\n    <NavLink className={s.user} to={path} activeClassName={s.active}>\r\n      <img src={avatar} alt={\"user avatar\"} className={s.avatar} />\r\n      <p className={s.name}>{props.name}</p>\r\n    </NavLink>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n","import React from \"react\";\r\nimport s from \"./Message.module.css\";\r\nimport avatar from \"../../../assets/images/user.svg\";\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <div className={s.message}>\r\n      <div className={s.message_user}>\r\n        <img src={avatar} alt={\"user avatar\"} className={s.avatar} />\r\n        <p className={s.name}>Имя Фамилия</p>\r\n      </div>\r\n      <p className={s.message_text}>{props.message}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport {\r\n  maxLengthCreator,\r\n  required,\r\n} from \"../../../utils/validators/validators\";\r\nimport { Input } from \"../../common/FormsControls/FormsControls\";\r\nimport s from \"../Dialogs.module.css\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div className={s.input_wrapper}>\r\n        <Field\r\n          component={Input}\r\n          className={s.input}\r\n          name=\"newMessageBody\"\r\n          placeholder=\"input your message\"\r\n          validate={[required, maxLength50]}\r\n        />\r\n        <button className={s.send}>Send</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default reduxForm({ form: \"dialogAddMessageForm\" })(AddMessageForm);\r\n","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n  let state = props.dialogsPage;\r\n  // Принимает на вход массив с данными dialogs и преобразует его в массив компонент dialogsElements\r\n  // Каждый элемент массива имеет название d (сокр. от dialogs)\r\n  let dialogsElements = state.dialogs.map((d) => (\r\n    <DialogItem name={d.name} id={d.id} key={d.id} />\r\n  ));\r\n\r\n  // Принимает на вход массив с данными messages и преобразует его в массив компонент messagesElements\r\n  // Каждый элемент массива имеет название m (сокр. от messages)\r\n  let messagesElements = state.messages.map((m) => (\r\n    <Message message={m.message} key={m.id} />\r\n  ));\r\n\r\n  let newMessageBody = state.newMessageBody;\r\n\r\n  let addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody);\r\n  };\r\n\r\n  if (!props.isAuth) {\r\n    return <Redirect to={\"/login\"} />;\r\n  }\r\n  return (\r\n    <div className={s.dialogs_wrapper}>\r\n      <div className={s.users}>{dialogsElements}</div>\r\n      <div className={s.line}></div>\r\n      <div className={s.dialog_window}>\r\n        <div className={s.message_wrapper}>{messagesElements}</div>\r\n        <AddMessageForm onSubmit={addNewMessage} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Dialogs;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../../HOC/withAuthRedirect\";\r\nimport { sendMessage } from \"../../redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  };\r\n};\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    sendMessage,\r\n  }),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}