{"version":3,"sources":["components/common/FormsControls/FormsControls.module.css","utils/validators/validators.js","components/common/FormsControls/FormsControls.jsx","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","required","value","maxLengthCreator","maxLength","length","FormControl","input","meta","touched","error","children","hasError","className","s","formControl","Input","props","restProps","child","createField","placeholder","name","validators","component","text","validate","Post","item","avatar","src","userAvatar","alt","message","like","like_button","like_count","likesCount","maxLength10","AddNewPostFormRedux","reduxForm","form","create_post","onSubmit","handleSubmit","Field","send","MyPosts","React","memo","postsElement","posts","map","p","id","content","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","ProfileStatusHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","type","ProfileInfo","profile","user","fullName","photos","large","contacts","github","vk","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/5.871f76cb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__xrhZx\",\"error\":\"FormsControls_error__UoLKa\",\"formSummaryError\":\"FormsControls_formSummaryError__1XbeL\"};","export const required = (value) => {\r\n  if (value) {\r\n    return undefined;\r\n  }\r\n  return \"Field is required\";\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  if (value.length > maxLength) {\r\n    return `Max length is ${maxLength} symbols`;\r\n  }\r\n  return undefined;\r\n};\r\n","import React from \"react\";\r\nimport { Field } from \"redux-form\";\r\nimport s from \"./FormsControls.module.css\";\r\n\r\nconst FormControl = ({ input, meta: { touched, error }, children }) => {\r\n  const hasError = touched && error;\r\n\r\n  return (\r\n    <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\r\n      <div>{children}</div>\r\n      {hasError && <span>{error}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Input = (props) => {\r\n  const { input, meta, child, ...restProps } = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      <input {...input} {...restProps} />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport const createField = (\r\n  placeholder,\r\n  name,\r\n  validators,\r\n  component,\r\n  props = {},\r\n  text = \"\"\r\n) => {\r\n  return (\r\n    <div>\r\n      <Field\r\n        placeholder={placeholder}\r\n        name={name}\r\n        validate={validators}\r\n        component={component}\r\n        {...props}\r\n      />{\" \"}\r\n      {text}\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"ProfileInfo_image__2OKbu\",\"user\":\"ProfileInfo_user__1jGka\",\"avatar\":\"ProfileInfo_avatar__2A2tv\",\"name\":\"ProfileInfo_name__3Jfk2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"MyPosts_input__2XjPH\",\"create_post\":\"MyPosts_create_post__2bsBC\",\"send\":\"MyPosts_send__FPMSJ\",\"content\":\"MyPosts_content__2HM6R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3n3xK\",\"avatar\":\"Post_avatar__3N53p\",\"text\":\"Post_text__1ytEC\",\"like\":\"Post_like__3aDU-\",\"like_button\":\"Post_like_button__JaCtg\",\"like_count\":\"Post_like_count__NxC_w\"};","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\nimport userAvatar from \"../../../../assets/images/user.svg\";\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img className={s.avatar} src={userAvatar} alt={\"user avatar\"} />\r\n      <p className={s.text}>{props.message}</p>\r\n      <div className={s.like}>\r\n        <button className={s.like_button}></button>\r\n        <p className={s.like_count}>{props.likesCount}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Post;\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport {\r\n  maxLengthCreator,\r\n  required,\r\n} from \"../../../utils/validators/validators\";\r\nimport { Input } from \"../../common/FormsControls/FormsControls\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form className={s.create_post} onSubmit={props.handleSubmit}>\r\n      <Field\r\n        component={Input}\r\n        name=\"newPostText\"\r\n        className={s.input}\r\n        placeholder=\"input your message\"\r\n        validate={[required, maxLength10]}\r\n      />\r\n      <button className={s.send}>Post</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nlet AddNewPostFormRedux = reduxForm({ form: \"ProfileAddNewPostForm\" })(\r\n  AddNewPostForm\r\n);\r\n\r\nconst MyPosts = React.memo((props) => {\r\n  // Принимает на вход массив с данными posts и преобразует его в массив компонент Post\r\n  // Каждый элемент массива имеет название p (сокр. от posts)\r\n  let postsElement = props.posts.map((p) => (\r\n    <Post key={p.id} message={p.message} likesCount={p.likesCount} />\r\n  ));\r\n\r\n  let newPostElement = React.createRef();\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  };\r\n\r\n  return (\r\n    <div className={s.content}>\r\n      <div>\r\n        <AddNewPostFormRedux onSubmit={onAddPost} />\r\n        <div className={s.posts}>\r\n          {/* Этот массив компонент строится через map из массива данных posts*/}\r\n          {postsElement}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default MyPosts;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addPost } from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {\r\n  addPost,\r\n})(MyPosts);\r\nexport default MyPostsContainer;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileStatusHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n          <p onDoubleClick={activateEditMode}>{props.status || \"*_____*\"}</p>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            onChange={onStatusChange}\r\n            value={status}\r\n            autoFocus={true}\r\n            onBlur={deactivateEditMode}\r\n            type=\"text\"\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default ProfileStatusHooks;\r\n","import React from \"react\";\r\nimport Preloader from \"../../common/preloader/preloader\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport avatar from \"../../../assets/images/user.svg\";\r\nimport ProfileStatusHooks from \"./ProfileStatusHooks\";\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus }) => {\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={s.user}>\r\n        <img src={avatar} alt={\"user avatar\"} className={s.avatar} />\r\n        <p className={s.name}>{profile.fullName}</p>\r\n        <img src={profile.photos.large} alt={\"user avatar\"} />\r\n        <p>Как со мной связаться: </p>\r\n        <ul>\r\n          <li>{profile.contacts.github}</li>\r\n          <li>{profile.contacts.vk}</li>\r\n        </ul>\r\n        <ProfileStatusHooks status={status} updateStatus={updateStatus} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getStatus,\r\n  getUserProfile,\r\n  updateStatus,\r\n} from \"../../redux/profileReducer\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { withAuthRedirect } from \"../../HOC/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}